# Build and push Docker images: https://github.com/marketplace/actions/build-and-push-docker-images

name: Test image

on:
  workflow_call:
    inputs:
      TAG:
        type: string
        required: true

jobs:
  test:
    name: Test image
    runs-on: ubuntu-latest
    env:
      skip:
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build 'komelt/grafana:${{ inputs.TAG }}'
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: "komelt/grafana:${{ inputs.TAG }}"
          build-args: |
            "IMAGE_TAG=${{ inputs.TAG }}"
          no-cache: true

      - name: Check if this image digest exists
        run: |
          TAG="${{ inputs.TAG }}"
          DIGEST=""
          for ((i=1; i <= 2; i++)); do
              response=$(curl -s "https://registry.hub.docker.com/v2/repositories/komelt/grafana/tags/?page=$i")
              DIGEST_TMP=$(echo $response | jq -r --arg TAG "$TAG" '.results[] | select(.name == $TAG) | .digest')
              
              if [[ "$DIGEST_TMP" != "" ]]; then
                  DIGEST=$DIGEST_TMP
                  break
              fi
          done
          
          echo "Digest found: $DIGEST"
          echo "Digest from build: ${{ steps.build-image.outputs.digest }}"

          if [[ "$DIGEST" != "${{ steps.build-image.outputs.digest }}" ]]; then
            echo "Local komelt/grafana:${{ inputs.TAG }} has same digest like remote. Skipping..."
            echo "skip=true" >> $GITHUB_ENV
          fi

      - name: Output sucessfull
        id: tag_succ_output
        if: ${{ success() && env.skip == false }}
        run: echo "success" > result.txt

      - name: Output failed
        id: tag_fail_output
        if: ${{ failure() && env.skip == false }}
        run: echo "failure" > result.txt

      - name: Upload result as artifact
        if: ${{ always() && env.skip == false }}
        uses: actions/upload-artifact@v3
        with:
          name: result-${{ inputs.TAG }}
          path: result.txt
    